plugins {
    id 'java'
}

group 'com.wrike.qaa'
version '1.0'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {

//    test frameworks
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.1'
    testImplementation group: 'io.qameta.allure', name: 'allure-java-commons', version: '2.13.8'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'com.googlecode.junit-toolbox', name: 'junit-toolbox', version: '2.4'
    testImplementation group: 'org.testng', name: 'testng', version: '7.4.0'

    // test filter
    testImplementation group: 'com.wrike.qaa', name: 'test_filter_junit5', version: '1.0'
    testImplementation group: 'com.wrike.qaa', name: 'test_filter_junit4', version: '1.0'
    testImplementation group: 'com.wrike.qaa', name: 'test_filter_testng', version: '1.0'
    implementation group: 'com.wrike.qaa', name: 'test_filter_adaptor', version: '1.0'
}

test {

    testLogging {
        events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
    }

    // Get test filter from system property
    systemProperty 'test.filter', System.getProperty('test.filter')

    // Settings for Junit 5 test framework

    useJUnitPlatform()
    // Allow not to add @ExtendWith(TestFilterExecutionCondition.class) under each test class
//    systemProperty 'junit.jupiter.extensions.autodetection.enabled', true

    // Settings for Testng test framework. Uncomment to check it for TestNg tests

//    useTestNG()
// Allow not to add @Listeners(TestFilterListener.class) under each test class
//    options {
//        listeners.add("com.wrike.qaa.TestFilterListener")
//    }

    //Settings for Testng test framework. Uncomment to check it for Junit 4 tests

//    useJUnit();

    // Gradle filter to run only TestsExampleSuite.class suite for test filtering
//    filter{
//        includeTestsMatching "*TestSuite"
//    }

}
